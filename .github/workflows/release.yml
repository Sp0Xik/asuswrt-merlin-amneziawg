name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
jobs:
  build:
    name: Build AmneziaWG
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm, arm64]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Install dependencies
        run: |
          sudo apt-get install -y build-essential
          
      - name: Clone amneziawg-go repository
        run: |
          git clone https://github.com/amnezia-vpn/amneziawg-go.git
          
      - name: Build amneziawg-go for ${{ matrix.arch }}
        env:
          CGO_ENABLED: 1
          GOARCH: ${{ matrix.arch }}
          CC: ${{ matrix.arch == 'arm' && 'arm-linux-gnueabihf-gcc' || 'aarch64-linux-gnu-gcc' }}
        run: |
          cd amneziawg-go
          go build -v -o ../src/backend/amneziawg-go
          
      - name: Package artifacts
        run: |
          cd src/backend
          mkdir -p dist
          tar -czf dist/amneziawg-${{ matrix.arch }}.tar.gz -C . amneziawg-go
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-${{ matrix.arch }}
          path: src/backend/dist/*.tar.gz
          retention-days: 90
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/amneziawg-arm/*.tar.gz
            artifacts/amneziawg-arm64/*.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
