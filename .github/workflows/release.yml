name: Build and Release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag version (e.g., v1.0.2)'
        required: true
        type: string
      release_description:
        description: 'Release description'
        required: true
        type: string
jobs:
  build_arm:
    name: Build AmneziaWG for ARM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu libmnl-dev libnl-3-dev libnl-genl-3-dev
          
      - name: Clone amneziawg-go repository
        run: |
          git clone https://github.com/amnezia-vpn/amneziawg-go.git
          
      - name: Build amneziawg-go for ARM
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: arm
          GOARM: 7
          CC: arm-linux-gnueabihf-gcc
        run: |
          cd amneziawg-go
          go build -v -o amneziawg-go-arm
          
      - name: Upload ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-go-arm
          path: amneziawg-go/amneziawg-go-arm
  build_arm64:
    name: Build AmneziaWG for ARM64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu libmnl-dev libnl-3-dev libnl-genl-3-dev
          
      - name: Clone amneziawg-go repository
        run: |
          git clone https://github.com/amnezia-vpn/amneziawg-go.git
          
      - name: Build amneziawg-go for ARM64
        env:
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: arm64
          CC: aarch64-linux-gnu-gcc
        run: |
          cd amneziawg-go
          go build -v -o amneziawg-go-arm64
          
      - name: Upload ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-go-arm64
          path: amneziawg-go/amneziawg-go-arm64
  publish_release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: [build_arm, build_arm64]
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create tag for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ github.event.inputs.tag_name }} -m "${{ github.event.inputs.release_description }}"
          git push origin ${{ github.event.inputs.tag_name }}
        
      - name: Download ARM artifact
        uses: actions/download-artifact@v4
        with:
          name: amneziawg-go-arm
          
      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: amneziawg-go-arm64
          
      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name || github.ref_name }}
          body: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_description || '' }}
          files: |
            amneziawg-go-arm
            amneziawg-go-arm64
          draft: false
          prerelease: false
